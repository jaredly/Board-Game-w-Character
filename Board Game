from random import randint
from Board import board

def find_empty_space():
  while True:
    x = randint(1, len(board))
    y = randint(1, len(board))
    
    if board[x][y] == " ":
      return x, y

for i in range(0, 5):
  x, y = find_empty_space()
  board[x][y] = "*"

theFirstX, theFirstY = find_empty_space()
theFirstEX, theFirstEY = find_empty_space()
theSecondEX, theSecondEY = find_empty_space()

player = {
  "x": theFirstX,
  "y": theFirstY,
  "coins": 0,
  "health": 100,
  "damage": 1,
}

enemies = [{
  "x": theFirstEX,
  "y": theFirstEY,
  "health": 5,
  "char": "E"
}, 
{
  "x": theSecondEX,
  "y": theSecondEY,
  "health": 8,
  "char": "B"
}]

board[player["x"]][player["y"]] = "C"
for enemy in enemies:
  board[enemy["x"]][enemy["y"]] = enemy["char"]

treasures = ["G", "H", "S"]
'''
tres1x, tres1y = find_empty_space()
tres2x, tres2y = find_empty_space()

board[tres1x][tres1y] = treasures[whichTres1]
board[tres2x][tres2y] = treasures[whichTres2]'''

for i in range(0, 2):
  tresX, tresY = find_empty_space()
  whichTres = randint(0, 2)
  board[tresX][tresY] = treasures[whichTres]

def make_divider(size):
  divider = []
  for i in range(size):
    divider.append('---')
  return '|'.join(divider)

divider = make_divider(len(board))

def printBoard():
  for d in range(1, (len(board) + 1)):
    print()
    print(divider)
    for i in range(1, len(board) + 1):
      if i == len(board):
        print(" " + str(board[i][d]), end="")
      else:
        print(" " + str(board[i][d]) + " |", end="")
  print("\n"*2)
  print("Coins: " + str(player["coins"]))
  print("Health: " + str(player["health"]) + "\n\n")

global has_health_potion
has_health_potion = False

def attack():
  for enemy in enemies:
    if enemy["x"] + 1 == player["x"] or enemy["x"] - 1 == player["x"] or enemy["y"] + 1 == player["y"] or enemy["y"] - 1 == player["y"]:
      enemy["health"] -= player["damage"]
      print("The enemy is at " + str(enemy["health"]) + " health.")
      break
  else:
    print("There are no enemies to attack!")

def healthBoost():
  global has_health_potion
  
  if has_health_potion == True:
    player["health"] += 15
    print("Your health has been raised by 15!")
    has_health_potion = False
  else:
    print("\nYou don't have a health potion!")

def enemyMove():
  for enemy in enemies:
    cmd = randint(1, 4)
  
    xVal = abs(enemy["x"] - player["x"])
    yVal = abs(enemy["y"] - player["y"])
    
    dx = 0
    dy = 0
    
    if xVal > yVal:
      if player["x"] > enemy["x"]:
        dx = 1
      else:
        dx = -1
    else:
      if player["y"] > enemy["y"]:
        dy = 1
      else:
        dy = -1
    
    if enemy["x"] + dx == player["x"] and enemy["y"] + dy == player["y"]:
      print("Oh no! Then enemy hit you!")
      player["health"] -= 10
    elif board[enemy["x"]+dx][enemy["y"]+dy] == "*":
      print("The enemies head slams into the barrier")
    elif board[enemy["x"]+dx][enemy["y"]+dy] == "G" or board[enemy["x"]+dx][enemy["y"]+dy] == "S" or board[enemy["x"]+dx][enemy["y"]+dy] == "H":
      print("Oh no! The enemy got to the chest before you! Good luck on the next one!")
      
      tresX, tresY = find_empty_space()
      whichTres = randint(0, 2)
      board[tresX][tresY] = treasures[whichTres]
      
      board[enemy["x"]][enemy["y"]] = " "
      enemy["x"] += dx
      enemy["y"] += dy
      board[enemy["x"]][enemy["y"]] = enemy["char"]
    elif board[enemy["x"]+dx][enemy["y"]+dy] != " ":
      pass # the tile is occupied
    else:
      board[enemy["x"]][enemy["y"]] = " "
      enemy["x"] += dx
      enemy["y"] += dy
      board[enemy["x"]][enemy["y"]] = enemy["char"]
      
def find_enemy_at(x, y):
  for enemy in enemies:
    if x == enemy["x"] and y == enemy["y"]:
      return enemy

def check():
  global has_health_potion
  
  cmd = input(">>> ")
  
  dx = 0
  dy = 0
  should_regen_health = True
    
  if cmd == "up":
    if player["y"] <= 1:
      print("\nYou cannot go up past here!")
    else:
      dy = -1
  elif cmd == "down":
    if player["y"] >= len(board):
      print("\nYou cannot go down past here!")
    else:
      dy = 1
  elif cmd == "right":
    if player["x"] >= len(board):
      print("\nYou cannot go right past here!")
    else:
      dx = 1
  elif cmd == "left":
    if player["x"] <= 1:
      print("\nYou cannot go left past here!")
    else:
      dx = -1
  elif cmd == "attack":
    attack()
    should_regen_health = False
  elif cmd == "health boost":
    healthBoost()
    should_regen_health = False
  else:
    print("\nWe do not recognize your command")
    should_regen_health = False
  
  if should_regen_health:
    rand_healing = randint(1, 5)
    player["health"] += rand_healing
  
 
  enemy = find_enemy_at(player["x"] + dx, player["y"] + dy)
  if enemy:
    print("Oh no! The enemy hit you!")
    
    board[player["x"]][player["y"]] = " "
    player["x"] += dx*2
    player["y"] += dy*2
    board[player["x"]][player["y"]] = "C"
  
    if player["x"] + dx*2 <= 0 or player["y"] + dy*2 <= 0 or player["x"] + dx*2 >= len(board) or player["y"] + dy*2 >= len(board):
      board[player["x"]][player["y"]] = " "
      enemy["x"] = player["x"]
      enemy["y"] = player["y"]
      player["x"] += dx
      player["y"] += dy
      board[player["x"]][player["y"]] = "C"
      
      board[enemy["x"]][enemy["y"]] = enemy["char"]
  elif board[player["x"]+dx][player["y"]+dy] == "*":
    print("Your head slams into the barrier")
  else:
    if board[player["x"]+dx][player["y"]+dy] == "G":
      print("You got 50 gold!")
      player["coins"] += 50
      
      tresX, tresY = find_empty_space()
      whichTres = randint(0, 2)
      board[tresX][tresY] = treasures[whichTres]
    elif board[player["x"]+dx][player["y"]+dy] == "S":
      print("You got a better sword!")
      player["damage"] += 2
      
      tresX, tresY = find_empty_space()
      whichTres = randint(0, 2)
      board[tresX][tresY] = treasures[whichTres]
    elif board[player["x"]+dx][player["y"]+dy] == "H":
      print("You got a health potion!")
      has_health_potion = True
      
      tresX, tresY = find_empty_space()
      whichTres = randint(0, 2)
      board[tresX][tresY] = treasures[whichTres]

    board[player["x"]][player["y"]] = " "
    player["x"] += dx
    player["y"] += dy
    board[player["x"]][player["y"]] = "C" # '''

print("Your commands are 'up', 'down', 'left', 'right', 'attack' and 'health boost'\n")

while True:
  enemyMove()
  printBoard()
  check()
  
  if player["health"] >= 100:
    player["health"] = 100
  
  for enemy in enemies:
    if enemy["health"] <= 0:
      enemyGold = randint(1, 10)
      print("You killed the enemy! You loot it and find " + str(enemyGold) + " gold.")
      player["coins"] += enemyGold
      
      board[enemy["x"]][enemy["y"]] = " "
      newEnX, newEnY = find_empty_space()
      
      enemy["x"] = newEnX
      enemy["y"] = newEnY
      board[enemy["x"]][enemy["y"]] = enemy["char"]

      enemy["health"] = 5
    
  if player["health"] <= 0:
    print("You died. :(")
    break
